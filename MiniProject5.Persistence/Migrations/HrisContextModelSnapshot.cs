// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniProject5.Persistence.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MiniProject8.Persistence.Migrations
{
    [DbContext(typeof(HrisContext))]
    partial class HrisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Department", b =>
                {
                    b.Property<int>("Deptid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("deptid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Deptid"));

                    b.Property<string>("Deptname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("deptname");

                    b.Property<int?>("Mgrempid")
                        .HasColumnType("integer")
                        .HasColumnName("mgrempid");

                    b.HasKey("Deptid");

                    b.HasIndex("Mgrempid");

                    b.ToTable("department");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Dependent", b =>
                {
                    b.Property<int>("Dependentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dependentid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Dependentid"));

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<int?>("Empid")
                        .HasColumnType("integer")
                        .HasColumnName("empid");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("relationship");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sex");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fname");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lname");

                    b.HasKey("Dependentid");

                    b.HasIndex("Empid");

                    b.ToTable("dependent");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Employee", b =>
                {
                    b.Property<int>("Empid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("empid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Empid"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<int?>("Deptid")
                        .HasColumnType("integer")
                        .HasColumnName("deptid");

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Emptype")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("emptype");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fname");

                    b.Property<DateTime?>("Lastupdateddate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastupdateddate");

                    b.Property<int?>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("Lname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lname");

                    b.Property<string>("Phoneno")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phoneno");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("position");

                    b.Property<string>("Reason")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("reason");

                    b.Property<double>("Salary")
                        .HasColumnType("double precision")
                        .HasColumnName("salary");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sex");

                    b.Property<string>("Ssn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("ssn");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("status");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("integer")
                        .HasColumnName("supervisorid");

                    b.Property<string>("userId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("userId");

                    b.HasKey("Empid");

                    b.HasIndex("Deptid");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.HasIndex(new[] { "Ssn" }, "employee_ssn_key")
                        .IsUnique();

                    b.ToTable("employee");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Location", b =>
                {
                    b.Property<int>("Locationid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("locationid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Locationid"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<int?>("Deptid")
                        .HasColumnType("integer")
                        .HasColumnName("deptid");

                    b.HasKey("Locationid");

                    b.HasIndex("Deptid");

                    b.ToTable("location");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Project", b =>
                {
                    b.Property<int>("Projid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("projid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Projid"));

                    b.Property<int>("Deptid")
                        .HasColumnType("integer")
                        .HasColumnName("deptid");

                    b.Property<string>("Projname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("projname");

                    b.HasKey("Projid");

                    b.HasIndex("Deptid");

                    b.ToTable("project");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Workson", b =>
                {
                    b.Property<int>("Empid")
                        .HasColumnType("integer")
                        .HasColumnName("empid");

                    b.Property<int>("Projid")
                        .HasColumnType("integer")
                        .HasColumnName("projid");

                    b.Property<DateOnly>("Dateworked")
                        .HasColumnType("date")
                        .HasColumnName("dateworked");

                    b.Property<int?>("Hoursworked")
                        .HasColumnType("integer")
                        .HasColumnName("hoursworked");

                    b.Property<string>("Userid")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("userid");

                    b.HasKey("Empid", "Projid");

                    b.HasIndex("Projid");

                    b.HasIndex("Userid")
                        .IsUnique();

                    b.ToTable("workson");
                });

            modelBuilder.Entity("MiniProject6.Domain.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Leaverequest", b =>
                {
                    b.Property<int>("Requestid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("requestid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Requestid"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("Empid")
                        .HasColumnType("integer")
                        .HasColumnName("empid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("enddate");

                    b.Property<string>("Leavetype")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("leavetype");

                    b.Property<int?>("Processid")
                        .HasColumnType("integer")
                        .HasColumnName("processid");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("reason");

                    b.Property<string>("Requestname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("requestname");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("startdate");

                    b.HasKey("Requestid");

                    b.HasIndex("Empid");

                    b.HasIndex("Processid");

                    b.ToTable("leaverequest");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Nextsteprule", b =>
                {
                    b.Property<int>("Ruleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ruleid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ruleid"));

                    b.Property<string>("Conditiontype")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("conditiontype");

                    b.Property<string>("Conditionvalue")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("conditionvalue");

                    b.Property<int?>("Currentstepid")
                        .HasColumnType("integer")
                        .HasColumnName("currentstepid");

                    b.Property<int?>("Nextstepid")
                        .HasColumnType("integer")
                        .HasColumnName("nextstepid");

                    b.HasKey("Ruleid");

                    b.HasIndex("Currentstepid");

                    b.HasIndex("Nextstepid");

                    b.ToTable("nextsteprules");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Process", b =>
                {
                    b.Property<int>("Processid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("processid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Processid"));

                    b.Property<int?>("Currentstepid")
                        .HasColumnType("integer")
                        .HasColumnName("currentstepid");

                    b.Property<DateTime?>("Requestdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("requestdate");

                    b.Property<string>("Requesterid")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("requesterid");

                    b.Property<string>("Requesttype")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("requesttype");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("status");

                    b.Property<int?>("Workflowid")
                        .HasColumnType("integer")
                        .HasColumnName("workflowid");

                    b.HasKey("Processid");

                    b.HasIndex("Currentstepid");

                    b.HasIndex("Requesterid");

                    b.HasIndex("Workflowid");

                    b.ToTable("process");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Workflow", b =>
                {
                    b.Property<int>("Workflowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("workflowid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Workflowid"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Workflowname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("workflowname");

                    b.HasKey("Workflowid");

                    b.ToTable("workflow");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Workflowaction", b =>
                {
                    b.Property<int>("Actionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("actionid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Actionid"));

                    b.Property<string>("Action")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("action");

                    b.Property<DateTime?>("Actiondate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("actiondate");

                    b.Property<string>("Actorid")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("actorid");

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<int?>("Processid")
                        .HasColumnType("integer")
                        .HasColumnName("processid");

                    b.Property<int?>("Stepid")
                        .HasColumnType("integer")
                        .HasColumnName("stepid");

                    b.HasKey("Actionid");

                    b.HasIndex("Actorid");

                    b.HasIndex("Processid");

                    b.HasIndex("Stepid");

                    b.ToTable("workflowactions");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Workflowsequence", b =>
                {
                    b.Property<int>("Stepid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("stepid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Stepid"));

                    b.Property<string>("Requiredrole")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("requiredrole");

                    b.Property<string>("Stepname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("stepname");

                    b.Property<int?>("Steporder")
                        .HasColumnType("integer")
                        .HasColumnName("steporder");

                    b.Property<int?>("Workflowid")
                        .HasColumnType("integer")
                        .HasColumnName("workflowid");

                    b.HasKey("Stepid");

                    b.HasIndex("Requiredrole");

                    b.HasIndex("Workflowid");

                    b.ToTable("workflowsequences");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MiniProject6.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MiniProject6.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniProject6.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MiniProject6.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Department", b =>
                {
                    b.HasOne("MiniProject5.Persistence.Models.Employee", "Mgremp")
                        .WithMany("Departments")
                        .HasForeignKey("Mgrempid");

                    b.Navigation("Mgremp");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Dependent", b =>
                {
                    b.HasOne("MiniProject5.Persistence.Models.Employee", "Emp")
                        .WithMany("Dependents")
                        .HasForeignKey("Empid");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Employee", b =>
                {
                    b.HasOne("MiniProject5.Persistence.Models.Department", "Dept")
                        .WithMany("Employees")
                        .HasForeignKey("Deptid");

                    b.HasOne("MiniProject5.Persistence.Models.Employee", "Supervisor")
                        .WithMany("Subordinates")
                        .HasForeignKey("SupervisorId");

                    b.HasOne("MiniProject6.Domain.Models.AppUser", "AppUser")
                        .WithOne("Employee")
                        .HasForeignKey("MiniProject5.Persistence.Models.Employee", "userId");

                    b.Navigation("AppUser");

                    b.Navigation("Dept");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Location", b =>
                {
                    b.HasOne("MiniProject5.Persistence.Models.Department", "Dept")
                        .WithMany("Locations")
                        .HasForeignKey("Deptid");

                    b.Navigation("Dept");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Project", b =>
                {
                    b.HasOne("MiniProject5.Persistence.Models.Department", "Dept")
                        .WithMany("Projects")
                        .HasForeignKey("Deptid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dept");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Workson", b =>
                {
                    b.HasOne("MiniProject5.Persistence.Models.Employee", "Emp")
                        .WithMany("Worksons")
                        .HasForeignKey("Empid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniProject5.Persistence.Models.Project", "Proj")
                        .WithMany("Worksons")
                        .HasForeignKey("Projid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniProject6.Domain.Models.AppUser", "AppUser")
                        .WithOne("Worksons")
                        .HasForeignKey("MiniProject5.Persistence.Models.Workson", "Userid");

                    b.Navigation("AppUser");

                    b.Navigation("Emp");

                    b.Navigation("Proj");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Leaverequest", b =>
                {
                    b.HasOne("MiniProject5.Persistence.Models.Employee", "Emp")
                        .WithMany("Leaverequests")
                        .HasForeignKey("Empid");

                    b.HasOne("MiniProject6.Persistence.Models.Process", "Process")
                        .WithMany("Leaverequests")
                        .HasForeignKey("Processid");

                    b.Navigation("Emp");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Nextsteprule", b =>
                {
                    b.HasOne("MiniProject6.Persistence.Models.Workflowsequence", "Currentstep")
                        .WithMany("NextstepruleCurrentsteps")
                        .HasForeignKey("Currentstepid");

                    b.HasOne("MiniProject6.Persistence.Models.Workflowsequence", "Nextstep")
                        .WithMany("NextstepruleNextsteps")
                        .HasForeignKey("Nextstepid");

                    b.Navigation("Currentstep");

                    b.Navigation("Nextstep");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Process", b =>
                {
                    b.HasOne("MiniProject6.Persistence.Models.Workflowsequence", "Currentstep")
                        .WithMany("Processes")
                        .HasForeignKey("Currentstepid");

                    b.HasOne("MiniProject6.Domain.Models.AppUser", "Requester")
                        .WithMany("Processes")
                        .HasForeignKey("Requesterid");

                    b.HasOne("MiniProject6.Persistence.Models.Workflow", "Workflow")
                        .WithMany("Processes")
                        .HasForeignKey("Workflowid");

                    b.Navigation("Currentstep");

                    b.Navigation("Requester");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Workflowaction", b =>
                {
                    b.HasOne("MiniProject6.Domain.Models.AppUser", "Actor")
                        .WithMany("Workflowactions")
                        .HasForeignKey("Actorid");

                    b.HasOne("MiniProject6.Persistence.Models.Process", "Process")
                        .WithMany("Workflowactions")
                        .HasForeignKey("Processid");

                    b.HasOne("MiniProject6.Persistence.Models.Workflowsequence", "Step")
                        .WithMany("Workflowactions")
                        .HasForeignKey("Stepid");

                    b.Navigation("Actor");

                    b.Navigation("Process");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Workflowsequence", b =>
                {
                    b.HasOne("MiniProject6.Domain.Models.AppUser", "RequiredroleNavigation")
                        .WithMany("Workflowsequences")
                        .HasForeignKey("Requiredrole");

                    b.HasOne("MiniProject6.Persistence.Models.Workflow", "Workflow")
                        .WithMany("Workflowsequences")
                        .HasForeignKey("Workflowid");

                    b.Navigation("RequiredroleNavigation");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Locations");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Employee", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Dependents");

                    b.Navigation("Leaverequests");

                    b.Navigation("Subordinates");

                    b.Navigation("Worksons");
                });

            modelBuilder.Entity("MiniProject5.Persistence.Models.Project", b =>
                {
                    b.Navigation("Worksons");
                });

            modelBuilder.Entity("MiniProject6.Domain.Models.AppUser", b =>
                {
                    b.Navigation("Employee");

                    b.Navigation("Processes");

                    b.Navigation("Workflowactions");

                    b.Navigation("Workflowsequences");

                    b.Navigation("Worksons");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Process", b =>
                {
                    b.Navigation("Leaverequests");

                    b.Navigation("Workflowactions");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Workflow", b =>
                {
                    b.Navigation("Processes");

                    b.Navigation("Workflowsequences");
                });

            modelBuilder.Entity("MiniProject6.Persistence.Models.Workflowsequence", b =>
                {
                    b.Navigation("NextstepruleCurrentsteps");

                    b.Navigation("NextstepruleNextsteps");

                    b.Navigation("Processes");

                    b.Navigation("Workflowactions");
                });
#pragma warning restore 612, 618
        }
    }
}
